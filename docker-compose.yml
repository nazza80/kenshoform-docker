version: "3.9"

services:
  front:
    build:
      context: ../kenshoform-front
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - kensho_network

  web:
    build:
      context: ../kenshoform-back
      dockerfile: extras/docker/production/Dockerfile
    env_file:
      - ../kenshoform-back/config/prod.env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    expose:
      - 8000
    networks:
      - kensho_network
    restart: unless-stopped

  nginx:
    image: nginx:stable
    depends_on:
      - web
      - front
    volumes:
      - ../kenshoform-back/config/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/wger/static:ro
      - media:/wger/media:ro
    ports:
      - "80:80"
    networks:
      - kensho_network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=Europe/Berlin
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    networks:
      - kensho_network
    restart: unless-stopped

  cache:
    image: redis
    expose:
      - 6379
    volumes:
      - ../kenshoform-back/config/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - kensho_network
    restart: unless-stopped

  celery_worker:
    build:
      context: ../kenshoform-back
      dockerfile: extras/docker/production/Dockerfile
    command: /start-worker
    env_file:
      - ../kenshoform-back/config/prod.env
    volumes:
      - media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    networks:
      - kensho_network

  celery_beat:
    build:
      context: ../kenshoform-back
      dockerfile: extras/docker/production/Dockerfile
    command: /start-beat
    volumes:
      - celery-beat:/home/wger/beat/
    env_file:
      - ../kenshoform-back/config/prod.env
    depends_on:
      celery_worker:
        condition: service_healthy
    networks:
      - kensho_network

volumes:
  postgres-data:
  celery-beat:
  redis-data:
  media:
  static:

networks:
  kensho_network:
    name: kensho_network
